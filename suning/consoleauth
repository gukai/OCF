#!/bin/sh
#Route OCF RA. Enables and disables spice auth.
#writen by Mars Gu.

#######################################################################
# Initialization:
: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/lib/heartbeat}
. ${OCF_FUNCTIONS_DIR}/ocf-shellfuncs
#######################################################################
meta_data() {
        cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="spiceauth" version="0.9">
<version>1.0</version>

<longdesc lang="en">
This Resource Agent can control the dlm_controld services needed by ocfs2.
It assumes that dlm_controld is in your default PATH.
In most cases, it should be run as an anonymous clone.
</longdesc>
<shortdesc lang="en">DLM Agent for OCFS2</shortdesc>

<parameters>
</parameters>

<actions>
<action name="start"        timeout="30" />
<action name="stop"         timeout="30" />
<action name="monitor"      timeout="20" interval="10"/>
<action name="meta-data"    timeout="5" />
<action name="validate-all"   timeout="30" />
</actions>
</resource-agent>
END
}

#######################################################################

spice_usage() {
	cat <<END
usage: $0 {start|stop|status|monitor|validate-all|meta-data}
END
}

spice_start() {
    spice_status
    status=$?
    if [ $status -eq $OCF_SUCCESS ]; then
	ocf_log debug "	openstack-nova-consoleauth already started."
	return $OCF_SUCCESS
    fi

    /etc/init.d/openstack-nova-consoleauth start >/dev/null 2>&1
    ret=$?
    if [ $ret -eq 0 ]; then
	ocf_log info "started openstack-nova-consoleauth successed."
	return $OCF_SUCCESS
    else
        return $OCF_ERR_GENERIC
	ocf_log error "start openstack-nova-consoleauth failed."
    fi
}


spice_stop() {
    spice_status
    status=$?
    case $status in
	$OCF_SUCCESS)
            /etc/init.d/openstack-nova-consoleauth stop >/dev/null 2>&1  
            if [ $? -eq 0 ]; then
		ocf_log info "stop openstack-nova-consoleauth successed"
		return $OCF_SUCCESS
	    else
		ocf_log error "stop openstack-nova-consoleauth failed."
                return $OCF_ERR_GENERIC
	    fi
	    ;;
	$OCF_NOT_RUNNING)
	    ocf_log debug "openstack-nova-consoleauth already stopped."
	    return $OCF_SUCCESS
	    ;;
    esac
    return $OCF_ERR_GENERIC
}

spice_status() {
    /etc/init.d/openstack-nova-consoleauth status > /dev/null 2>&1
    if [ $? -eq 0 ]; then
	return $OCF_SUCCESS
    else
        return $OCF_NOT_RUNNING
    fi
}

spice_monitor(){
    local processor_num=`ps -ef | grep /usr/bin/nova-consoleauth | grep -v 'grep' | wc -l`
    if [ $processor_num -gt 1 ]; then
        local processor_list=`ps -eo pid,cmd | grep /usr/bin/nova-consoleauth | grep -v 'grep' | cut -d'/' -f1`
        for processor in $processor_list; do kill -9 $processor ; done
        return $OCF_NOT_RUNNING
    fi

    ret=`spice_status`
    return $ret
}

case $__OCF_ACTION in
meta-data)	meta_data
		# OCF variables are not set when querying meta-data
		exit 0
		;;
usage|help)	spice_usage
		exit $OCF_SUCCESS
		;;
start)		spice_start;;
stop)		spice_stop;;
status)	        spice_status;;
monitor)	spice_monitor;;
reload)		ocf_log info "Reloading..."
	        spice_start
		;;
validate-all)	;;
*)		spice_usage
		exit $OCF_ERR_UNIMPLEMENTED
		;;
esac
rc=$?
ocf_log debug "${OCF_RESOURCE_INSTANCE} $__OCF_ACTION returned $rc"
exit $rc
